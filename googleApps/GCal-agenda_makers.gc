/**
 * This is triggered whenever there is a change to the calendar
 * When there is a change, it searches for events that include "#agenda"
 * in the decrisption.
 *
 */
function onCalendarChange() {
  // Get recent events with the tag
  const now = new Date();
  var untill = new Date();
  untill.setDate(untill.getDate() + 10);

  const events = CalendarApp.getEvents(
      now,
      untill,
      {search: '#agenda'},
  );
  Logger.log('New date'+ untill);
  Logger.log('Events:'+events.length);
  for (i = 0; i < events.length; i++) {
    const event = events[i];

    // Confirm whether the event has the tag
    let description = event.getDescription();
    if (description.search('#agenda') == -1) continue;

    // Only work with events created by the owner of this calendar
    if (event.isOwnedByMe()) {
      Logger.log('Original:' + description.toString());
      description = description.replace(
          '#agenda',
          descriptionString(),
      );
      Logger.log('Replaced:' + description);
      event.setDescription(description);
    }
  }
  return;
}

function descriptionString() {
  var template = new String();
  template = template.concat(
    '<b>Desired meeting outcome:</b>',
    '<br><i>Decide | Approve & Align | Consult | Inform (post-comm follow up) | Inform (recurring updates)</i>',
    '<br>',
    '<br>Out of scope:',
    '<br>',
    '<br><b>Required Pre-work:</b>',
    '<ul><li><br></li></ul>',
    '<br><b>Suggested format:</b>',
    '<br>30 mins: ',
    '<br>',
    '<br>',
    '<br><b>Reference Materials:</br></b>',
    '<br>Slack - #</br>',
    '<br>Meeting Notes - </br>',
    ''
    )
    // Markup:<b>hihi</b><br><br><i>sdsdsd</i><br><br><br><u>sdsd</u><br><br><br><ol><li>sdsd</li></ol><br><br>#agenda
  return template
}

/**
 * Register a trigger to watch for calendar changes.
 */
function setUp() {
  var email = Session.getActiveUser().getEmail();
  Logger.log('Email: ' + email);
  ScriptApp.newTrigger("onCalendarChange").forUserCalendar(email).onEventUpdated().create();
}
